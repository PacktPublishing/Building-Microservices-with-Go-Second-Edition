// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: example.proto

package proto_examples

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Enumerations
type Diet int32

const (
	Diet_VEGAN       Diet = 0 // default item, all enums must have a default
	Diet_VEGITARIAN  Diet = 1
	Diet_PESCATARIAN Diet = 2
	Diet_GLUTEN_FREE Diet = 3
	Diet_DAIRY_FREE  Diet = 4
)

// Enum value maps for Diet.
var (
	Diet_name = map[int32]string{
		0: "VEGAN",
		1: "VEGITARIAN",
		2: "PESCATARIAN",
		3: "GLUTEN_FREE",
		4: "DAIRY_FREE",
	}
	Diet_value = map[string]int32{
		"VEGAN":       0,
		"VEGITARIAN":  1,
		"PESCATARIAN": 2,
		"GLUTEN_FREE": 3,
		"DAIRY_FREE":  4,
	}
)

func (x Diet) Enum() *Diet {
	p := new(Diet)
	*p = x
	return p
}

func (x Diet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diet) Descriptor() protoreflect.EnumDescriptor {
	return file_example_proto_enumTypes[0].Descriptor()
}

func (Diet) Type() protoreflect.EnumType {
	return &file_example_proto_enumTypes[0]
}

func (x Diet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diet.Descriptor instead.
func (Diet) EnumDescriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

type Recipie_Available int32

const (
	Recipie_ALL_DAY Recipie_Available = 0
	Recipie_LUNCH   Recipie_Available = 1
	Recipie_BRUNCH  Recipie_Available = 1 // shares a value with LUNCH
	Recipie_DINNER  Recipie_Available = 2
)

// Enum value maps for Recipie_Available.
var (
	Recipie_Available_name = map[int32]string{
		0: "ALL_DAY",
		1: "LUNCH",
		// Duplicate value: 1: "BRUNCH",
		2: "DINNER",
	}
	Recipie_Available_value = map[string]int32{
		"ALL_DAY": 0,
		"LUNCH":   1,
		"BRUNCH":  1,
		"DINNER":  2,
	}
)

func (x Recipie_Available) Enum() *Recipie_Available {
	p := new(Recipie_Available)
	*p = x
	return p
}

func (x Recipie_Available) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Recipie_Available) Descriptor() protoreflect.EnumDescriptor {
	return file_example_proto_enumTypes[1].Descriptor()
}

func (Recipie_Available) Type() protoreflect.EnumType {
	return &file_example_proto_enumTypes[1]
}

func (x Recipie_Available) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Recipie_Available.Descriptor instead.
func (Recipie_Available) EnumDescriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{4, 0}
}

// Simple message with scalar types
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          // equivalent to Go int32, encoded as variable length
	CategoryId   int64   `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`        // equivalent to Go int64, encoded as variable length Varint
	DepartmentId uint64  `protobuf:"fixed64,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"` // equivalent to Go int64, encoded as 8 byte number
	Name         string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                       // equivalent to Go string
	Description  string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                         // equivalent to Go string
	Price        float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`                                   // equivalent to Go float64
	Sku          string  `protobuf:"bytes,7,opt,name=sku,proto3" json:"sku,omitempty"`                                         // equivalent to Go string
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Product) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

// Embedding messages
// Messages can be used as types in other messages, they can either use
// external messages or embed their own messages.
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product  *Product        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Customer *Order_Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *Order) GetCustomer() *Order_Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// Lists
// Messages can contain lists of scalar types or messages using the repeated keyword
type ServerOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *ServerOrders_Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Order  []*Order             `protobuf:"bytes,2,rep,name=order,proto3" json:"order,omitempty"`
}

func (x *ServerOrders) Reset() {
	*x = ServerOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOrders) ProtoMessage() {}

func (x *ServerOrders) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOrders.ProtoReflect.Descriptor instead.
func (*ServerOrders) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{2}
}

func (x *ServerOrders) GetServer() *ServerOrders_Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *ServerOrders) GetOrder() []*Order {
	if x != nil {
		return x.Order
	}
	return nil
}

// Maps
// messages can contain maps map<key, value>
type RestaurantOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// maps can contain scalar types as values
	RestaurantOrderCount map[string]float64 `protobuf:"bytes,1,rep,name=restaurant_order_count,json=restaurantOrderCount,proto3" json:"restaurant_order_count,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	// maps can contain messages as values
	RestaurantServerOrders map[string]*ServerOrders `protobuf:"bytes,2,rep,name=restaurant_server_orders,json=restaurantServerOrders,proto3" json:"restaurant_server_orders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RestaurantOrders) Reset() {
	*x = RestaurantOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantOrders) ProtoMessage() {}

func (x *RestaurantOrders) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantOrders.ProtoReflect.Descriptor instead.
func (*RestaurantOrders) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{3}
}

func (x *RestaurantOrders) GetRestaurantOrderCount() map[string]float64 {
	if x != nil {
		return x.RestaurantOrderCount
	}
	return nil
}

func (x *RestaurantOrders) GetRestaurantServerOrders() map[string]*ServerOrders {
	if x != nil {
		return x.RestaurantServerOrders
	}
	return nil
}

type Recipie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Suitability []Diet            `protobuf:"varint,2,rep,packed,name=suitability,proto3,enum=proto_examples.Diet" json:"suitability,omitempty"`   // enums can be lists
	Available   Recipie_Available `protobuf:"varint,3,opt,name=available,proto3,enum=proto_examples.Recipie_Available" json:"available,omitempty"` // enums can use embedded types
}

func (x *Recipie) Reset() {
	*x = Recipie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipie) ProtoMessage() {}

func (x *Recipie) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipie.ProtoReflect.Descriptor instead.
func (*Recipie) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{4}
}

func (x *Recipie) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipie) GetSuitability() []Diet {
	if x != nil {
		return x.Suitability
	}
	return nil
}

func (x *Recipie) GetAvailable() Recipie_Available {
	if x != nil {
		return x.Available
	}
	return Recipie_ALL_DAY
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *status.Status       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // include the standard rpc status message used in gRPC errors
	Time  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`   // dates are not scalar but you can use protobuf.Timestamp
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorMessage) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ErrorMessage) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Ingredients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NutricionalInfo []*any.Any `protobuf:"bytes,2,rep,name=nutricional_info,json=nutricionalInfo,proto3" json:"nutricional_info,omitempty"` // represents a list which can contain any protobuf message
}

func (x *Ingredients) Reset() {
	*x = Ingredients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingredients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredients) ProtoMessage() {}

func (x *Ingredients) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredients.ProtoReflect.Descriptor instead.
func (*Ingredients) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{6}
}

func (x *Ingredients) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredients) GetNutricionalInfo() []*any.Any {
	if x != nil {
		return x.NutricionalInfo
	}
	return nil
}

// Define messages which can be of different fixed types
type SubscribeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message will contain one of the two types
	// setting one of these types automatically clears all other members
	// only the last field you set will have a value
	//
	// Types that are assignable to Message:
	//	*SubscribeOrderResponse_Order
	//	*SubscribeOrderResponse_Error
	Message isSubscribeOrderResponse_Message `protobuf_oneof:"message"`
}

func (x *SubscribeOrderResponse) Reset() {
	*x = SubscribeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOrderResponse) ProtoMessage() {}

func (x *SubscribeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOrderResponse.ProtoReflect.Descriptor instead.
func (*SubscribeOrderResponse) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{7}
}

func (m *SubscribeOrderResponse) GetMessage() isSubscribeOrderResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SubscribeOrderResponse) GetOrder() *Order {
	if x, ok := x.GetMessage().(*SubscribeOrderResponse_Order); ok {
		return x.Order
	}
	return nil
}

func (x *SubscribeOrderResponse) GetError() *status.Status {
	if x, ok := x.GetMessage().(*SubscribeOrderResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSubscribeOrderResponse_Message interface {
	isSubscribeOrderResponse_Message()
}

type SubscribeOrderResponse_Order struct {
	Order *Order `protobuf:"bytes,1,opt,name=order,proto3,oneof"`
}

type SubscribeOrderResponse_Error struct {
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubscribeOrderResponse_Order) isSubscribeOrderResponse_Message() {}

func (*SubscribeOrderResponse_Error) isSubscribeOrderResponse_Message() {}

type Order_Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Order_Customer) Reset() {
	*x = Order_Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order_Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order_Customer) ProtoMessage() {}

func (x *Order_Customer) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order_Customer.ProtoReflect.Descriptor instead.
func (*Order_Customer) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Order_Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Order_Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ServerOrders_Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ServerOrders_Server) Reset() {
	*x = ServerOrders_Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOrders_Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOrders_Server) ProtoMessage() {}

func (x *ServerOrders_Server) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOrders_Server.ProtoReflect.Descriptor instead.
func (*ServerOrders_Server) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ServerOrders_Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x6b, 0x75, 0x22, 0xac, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x34, 0x0a,
	0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c,
	0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xae, 0x03, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x70, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x16, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x47, 0x0a, 0x19, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x67, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd7, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x0b, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x65, 0x74, 0x52, 0x0b, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4c, 0x4c, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x55, 0x4e, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42,
	0x52, 0x55, 0x4e, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x4e, 0x4e, 0x45,
	0x52, 0x10, 0x02, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x68, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x62, 0x0a, 0x0b, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x63, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x53, 0x0a, 0x04, 0x44, 0x69, 0x65, 0x74, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x45, 0x47, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45, 0x47, 0x49,
	0x54, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x45, 0x53, 0x43,
	0x41, 0x54, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x4c, 0x55,
	0x54, 0x45, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41,
	0x49, 0x52, 0x59, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x04, 0x32, 0xbf, 0x01, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x62, 0x5a, 0x60,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x61, 0x63, 0x6b, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x2d, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2d, 0x77, 0x69, 0x74, 0x68, 0x2d, 0x47, 0x6f, 0x2d, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x2d, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData = file_example_proto_rawDesc
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_proto_rawDescData)
	})
	return file_example_proto_rawDescData
}

var file_example_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_example_proto_goTypes = []interface{}{
	(Diet)(0),                      // 0: proto_examples.Diet
	(Recipie_Available)(0),         // 1: proto_examples.Recipie.Available
	(*Product)(nil),                // 2: proto_examples.Product
	(*Order)(nil),                  // 3: proto_examples.Order
	(*ServerOrders)(nil),           // 4: proto_examples.ServerOrders
	(*RestaurantOrders)(nil),       // 5: proto_examples.RestaurantOrders
	(*Recipie)(nil),                // 6: proto_examples.Recipie
	(*ErrorMessage)(nil),           // 7: proto_examples.ErrorMessage
	(*Ingredients)(nil),            // 8: proto_examples.Ingredients
	(*SubscribeOrderResponse)(nil), // 9: proto_examples.SubscribeOrderResponse
	(*Order_Customer)(nil),         // 10: proto_examples.Order.Customer
	(*ServerOrders_Server)(nil),    // 11: proto_examples.ServerOrders.Server
	nil,                            // 12: proto_examples.RestaurantOrders.RestaurantOrderCountEntry
	nil,                            // 13: proto_examples.RestaurantOrders.RestaurantServerOrdersEntry
	(*status.Status)(nil),          // 14: google.rpc.Status
	(*timestamp.Timestamp)(nil),    // 15: google.protobuf.Timestamp
	(*any.Any)(nil),                // 16: google.protobuf.Any
}
var file_example_proto_depIdxs = []int32{
	2,  // 0: proto_examples.Order.product:type_name -> proto_examples.Product
	10, // 1: proto_examples.Order.customer:type_name -> proto_examples.Order.Customer
	11, // 2: proto_examples.ServerOrders.server:type_name -> proto_examples.ServerOrders.Server
	3,  // 3: proto_examples.ServerOrders.order:type_name -> proto_examples.Order
	12, // 4: proto_examples.RestaurantOrders.restaurant_order_count:type_name -> proto_examples.RestaurantOrders.RestaurantOrderCountEntry
	13, // 5: proto_examples.RestaurantOrders.restaurant_server_orders:type_name -> proto_examples.RestaurantOrders.RestaurantServerOrdersEntry
	0,  // 6: proto_examples.Recipie.suitability:type_name -> proto_examples.Diet
	1,  // 7: proto_examples.Recipie.available:type_name -> proto_examples.Recipie.Available
	14, // 8: proto_examples.ErrorMessage.error:type_name -> google.rpc.Status
	15, // 9: proto_examples.ErrorMessage.time:type_name -> google.protobuf.Timestamp
	16, // 10: proto_examples.Ingredients.nutricional_info:type_name -> google.protobuf.Any
	3,  // 11: proto_examples.SubscribeOrderResponse.order:type_name -> proto_examples.Order
	14, // 12: proto_examples.SubscribeOrderResponse.error:type_name -> google.rpc.Status
	4,  // 13: proto_examples.RestaurantOrders.RestaurantServerOrdersEntry.value:type_name -> proto_examples.ServerOrders
	11, // 14: proto_examples.SearchOrders.Search:input_type -> proto_examples.ServerOrders.Server
	11, // 15: proto_examples.SearchOrders.SubscribeOrders:input_type -> proto_examples.ServerOrders.Server
	4,  // 16: proto_examples.SearchOrders.Search:output_type -> proto_examples.ServerOrders
	9,  // 17: proto_examples.SearchOrders.SubscribeOrders:output_type -> proto_examples.SubscribeOrderResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingredients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order_Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOrders_Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_example_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SubscribeOrderResponse_Order)(nil),
		(*SubscribeOrderResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		EnumInfos:         file_example_proto_enumTypes,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_rawDesc = nil
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchOrdersClient is the client API for SearchOrders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchOrdersClient interface {
	// Defining rpc for unary operations
	// We can reference a nested message using the notation parent.message
	Search(ctx context.Context, in *ServerOrders_Server, opts ...grpc.CallOption) (*ServerOrders, error)
	// Defining streaming RPCs can be done by appending the keyword stream to a message type
	SubscribeOrders(ctx context.Context, opts ...grpc.CallOption) (SearchOrders_SubscribeOrdersClient, error)
}

type searchOrdersClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchOrdersClient(cc grpc.ClientConnInterface) SearchOrdersClient {
	return &searchOrdersClient{cc}
}

func (c *searchOrdersClient) Search(ctx context.Context, in *ServerOrders_Server, opts ...grpc.CallOption) (*ServerOrders, error) {
	out := new(ServerOrders)
	err := c.cc.Invoke(ctx, "/proto_examples.SearchOrders/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchOrdersClient) SubscribeOrders(ctx context.Context, opts ...grpc.CallOption) (SearchOrders_SubscribeOrdersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchOrders_serviceDesc.Streams[0], "/proto_examples.SearchOrders/SubscribeOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchOrdersSubscribeOrdersClient{stream}
	return x, nil
}

type SearchOrders_SubscribeOrdersClient interface {
	Send(*ServerOrders_Server) error
	Recv() (*SubscribeOrderResponse, error)
	grpc.ClientStream
}

type searchOrdersSubscribeOrdersClient struct {
	grpc.ClientStream
}

func (x *searchOrdersSubscribeOrdersClient) Send(m *ServerOrders_Server) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchOrdersSubscribeOrdersClient) Recv() (*SubscribeOrderResponse, error) {
	m := new(SubscribeOrderResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SearchOrdersServer is the server API for SearchOrders service.
type SearchOrdersServer interface {
	// Defining rpc for unary operations
	// We can reference a nested message using the notation parent.message
	Search(context.Context, *ServerOrders_Server) (*ServerOrders, error)
	// Defining streaming RPCs can be done by appending the keyword stream to a message type
	SubscribeOrders(SearchOrders_SubscribeOrdersServer) error
}

// UnimplementedSearchOrdersServer can be embedded to have forward compatible implementations.
type UnimplementedSearchOrdersServer struct {
}

func (*UnimplementedSearchOrdersServer) Search(context.Context, *ServerOrders_Server) (*ServerOrders, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedSearchOrdersServer) SubscribeOrders(SearchOrders_SubscribeOrdersServer) error {
	return status1.Errorf(codes.Unimplemented, "method SubscribeOrders not implemented")
}

func RegisterSearchOrdersServer(s *grpc.Server, srv SearchOrdersServer) {
	s.RegisterService(&_SearchOrders_serviceDesc, srv)
}

func _SearchOrders_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerOrders_Server)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchOrdersServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_examples.SearchOrders/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchOrdersServer).Search(ctx, req.(*ServerOrders_Server))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchOrders_SubscribeOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchOrdersServer).SubscribeOrders(&searchOrdersSubscribeOrdersServer{stream})
}

type SearchOrders_SubscribeOrdersServer interface {
	Send(*SubscribeOrderResponse) error
	Recv() (*ServerOrders_Server, error)
	grpc.ServerStream
}

type searchOrdersSubscribeOrdersServer struct {
	grpc.ServerStream
}

func (x *searchOrdersSubscribeOrdersServer) Send(m *SubscribeOrderResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchOrdersSubscribeOrdersServer) Recv() (*ServerOrders_Server, error) {
	m := new(ServerOrders_Server)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SearchOrders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_examples.SearchOrders",
	HandlerType: (*SearchOrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _SearchOrders_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeOrders",
			Handler:       _SearchOrders_SubscribeOrders_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "example.proto",
}
